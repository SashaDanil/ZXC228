from aiogram import Bot, Dispatcher, types
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, InputFile
from aiogram.contrib.middlewares.logging import LoggingMiddleware
from aiogram.utils import executor
import logging

API_TOKEN = '8032304693:AAH0e-7Oz3xfcOt2HNC95BRdIjDQ-j5xHSA'

bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)
dp.middleware.setup(LoggingMiddleware())

# –ì–ª–∞–≤–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞
main_menu = InlineKeyboardMarkup()
button_crypto = InlineKeyboardButton('–ö—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞', callback_data='crypto')
button_fiat = InlineKeyboardButton('–í–∞–ª—é—Ç–∞ —Å—Ç—Ä–∞–Ω', callback_data='fiat')
button_news = InlineKeyboardButton('–ù–æ–≤–æ—Å—Ç–∏ –æ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–µ', url='https://www.rbc.ru/crypto/')
button_video = InlineKeyboardButton('–¢—Ä–µ–π–¥–∏–Ω–≥ —Å –Ω—É–ª—è', url='https://rutube.ru/video/bba025514598fef2fda7b926d650d505/')
button_platforms = InlineKeyboardButton('–õ—É—á—à–∏–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã', callback_data='platforms')
main_menu.row(button_crypto, button_fiat)
main_menu.row(button_platforms)
main_menu.row(button_video)
main_menu.row(button_news)

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã
crypto_menu = InlineKeyboardMarkup()
button_btc = InlineKeyboardButton('üìà –ë–∏—Ç–∫–æ–∏–Ω', url='https://www.rbc.ru/crypto/currency/btcusd')
button_eth = InlineKeyboardButton('ü™ô –≠—Ñ–∏—Ä–∏—É–º', url='https://www.rbc.ru/crypto/currency/ethusd')
button_xrp = InlineKeyboardButton('üí∏ XRP', url='https://www.rbc.ru/crypto/currency/xrpusd')
button_trump = InlineKeyboardButton('üôç‚Äç‚ôÇÔ∏è TRUMP', url='https://ru.investing.com/crypto/official-trump')
button_back_crypto = InlineKeyboardButton('‚ùå –ù–∞–∑–∞–¥ ‚ùå', callback_data='back_crypto')
crypto_menu.row(button_btc)
crypto_menu.row(button_eth)
crypto_menu.row(button_xrp)
crypto_menu.row(button_trump)
crypto_menu.row(button_back_crypto)

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —Ñ–∏–∞—Ç–Ω—ã—Ö –≤–∞–ª—é—Ç
fiat_menu = InlineKeyboardMarkup()
button_dollar = InlineKeyboardButton('üá∫üá≤ –î–æ–ª–ª–∞—Ä', url='https://www.rbc.ru/quote/ticker/72413')
button_euro = InlineKeyboardButton('üá™üá∫ –ï–≤—Ä–æ', url='https://www.rbc.ru/quote/ticker/72383')
button_yuan = InlineKeyboardButton('üá®üá≥ –Æ–∞–Ω—å', url='https://www.rbc.ru/quote/ticker/72377')
button_yen = InlineKeyboardButton('üáØüáµ –ô–µ–Ω–∞', url='https://ru.investing.com/currencies/jpy-rub')
button_back_fiat = InlineKeyboardButton('‚ùå –ù–∞–∑–∞–¥ ‚ùå', callback_data='back_fiat')
fiat_menu.row(button_dollar)
fiat_menu.row(button_euro)
fiat_menu.row(button_yuan)
fiat_menu.row(button_yen)
fiat_menu.row(button_back_fiat)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@dp.message_handler(commands=['start'])
async def start_command(message: types.Message):
    image_url = 'https://etoday.kz/wp-content/uploads/2023/04/Bitcoin-780x470.jpg'
    logging.info("–ö–æ–º–∞–Ω–¥–∞ /start –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞.")
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    await bot.send_photo(
        message.chat.id,
        photo=image_url,
        caption='üíµ –ü—Ä–∏–≤–µ—Ç, —è –±–æ—Ç –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∫—Ä–∏–ø—Ç—ã –∏ –≤–∞–ª—é—Ç—ã. ü™ô –í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é:',
        reply_markup=main_menu
    )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–ª–ª–±—ç–∫–æ–≤
@dp.callback_query_handler(lambda query: query.data in ['crypto', 'fiat', 'back_crypto', 'back_fiat', 'platforms'])
async def inline_callback(query: types.CallbackQuery):
    if query.data == 'crypto':
        await query.message.edit_caption(caption='–í—ã –≤—ã–±—Ä–∞–ª–∏ "–ö—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—É".', reply_markup=crypto_menu)
    elif query.data == 'fiat':
        await query.message.edit_caption(caption='–í—ã –≤—ã–±—Ä–∞–ª–∏ "–í–∞–ª—é—Ç–∞ —Å—Ç—Ä–∞–Ω".', reply_markup=fiat_menu)
    elif query.data == 'platforms':
        platforms_message = (
            "–í–æ—Ç —Å–ø–∏—Å–æ–∫ –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö –∏–∑ –ª—É—á—à–∏—Ö –ø–ª–∞—Ç—Ñ–æ—Ä–º –¥–ª—è —Ç–æ—Ä–≥–æ–≤–ª–∏ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–æ–π:\n"
            "- Binance\n"
            "- Coinbase\n"
            "- Kraken\n"
            "- Huobi Global\n"
            "- KuCoin\n"
            "–ö–∞–∂–¥–∞—è –∏–∑ –Ω–∏—Ö –∏–º–µ–µ—Ç —Å–≤–æ–∏ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ –∏ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞. –í—ã–±–∏—Ä–∞–π—Ç–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—É, –∫–æ—Ç–æ—Ä–∞—è –ª—É—á—à–µ –≤—Å–µ–≥–æ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –≤–∞—à–∏–º –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç—è–º.\n\n"
        )
        back_button = InlineKeyboardButton(text='–ó–∞–∫—Ä—ã—Ç—å', callback_data='close_platforms')
        back_keyboard = InlineKeyboardMarkup().add(back_button)
        await bot.send_message(chat_id=query.message.chat.id, text=platforms_message, reply_markup=back_keyboard)
    elif query.data == 'back_crypto':
        await return_to_main_menu(query)
    elif query.data == 'back_fiat':
        await return_to_main_menu(query)

# –§—É–Ω–∫—Ü–∏—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫ –≥–ª–∞–≤–Ω–æ–º—É –º–µ–Ω—é
async def return_to_main_menu(query: types.CallbackQuery):
    await query.message.edit_caption(reply_markup=main_menu)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ó–∞–∫—Ä—ã—Ç—å"
@dp.callback_query_handler(lambda query: query.data == 'close_platforms')
async def close_platforms(query: types.CallbackQuery):
    await query.message.delete()

if __name__ == "__main__":
    executor.start_polling(dp, skip_updates=True)
